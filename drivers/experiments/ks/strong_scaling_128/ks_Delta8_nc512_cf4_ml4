Using Delta correction
Using theta method

  Braid: Begin simulation, 4096 time steps
  Braid: || r_0 || not available, wall time = 1.20e-02
  Braid: || r_1 || = 2.979580e-01, conv factor = 1.00e+00, wall time = 3.18e-01
  Braid: || r_2 || = 5.773858e-01, conv factor = 1.94e+00, wall time = 6.33e-01
  Braid: || r_3 || = 6.259717e-01, conv factor = 1.08e+00, wall time = 9.50e-01
  Braid: || r_4 || = 4.116175e-01, conv factor = 6.58e-01, wall time = 1.27e+00
  Braid: || r_5 || = 3.743922e-01, conv factor = 9.10e-01, wall time = 1.59e+00
  Braid: || r_6 || = 3.378359e-01, conv factor = 9.02e-01, wall time = 1.92e+00
  Braid: || r_7 || = 1.326948e-01, conv factor = 3.93e-01, wall time = 2.24e+00
  Braid: || r_8 || = 7.620106e-03, conv factor = 5.74e-02, wall time = 2.56e+00
  Braid: || r_9 || = 4.160444e-05, conv factor = 5.46e-03, wall time = 2.88e+00
  Braid: || r_10 || = 4.462537e-08, conv factor = 1.07e-03, wall time = 3.20e+00
  Braid: || r_11 || = 7.697378e-10, conv factor = 1.72e-02, wall time = 3.52e+00

  Braid Solver Stats:
  start time = 0.000000e+00
  stop time  = 1.842068e+02
  time steps = 4096

  use seq soln?         = 0
  storage               = 0

  max iterations        = 25
  iterations            = 12

  residual norm         = 7.697378e-10
  stopping tolerance    = 1.000000e-08
  use relative tol?     = 0
                                          --> 2-norm TemporalNorm 

  use fmg?              = 0
  access_level          = 0
  print_level           = 2

  max number of levels  = 4
  min coarse            = 2
  number of levels      = 4
  skip down cycle       = 1
  periodic              = 0
  relax_only_cg         = 0
  finalFCRelax          = 0
  number of refinements = 0

  level   time-pts   cfactor   nrelax   Crelax Wt
      0      4096        4        1        1.00
      1      1024        4        1        1.00
      2       256        4        1        1.00
      3        64  

  wall time = 3.796303

